<%- include('../adminLayout/header.ejs',{adminSession}) %>
    <section class="content-main ml-110">
        <form action="/admin/editedProduct?id=<%= product._id %>" method="POST" enctype="multipart/form-data"
            onsubmit="return validateForm()">
            <div class="row">
                <div class="col-6">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                        <div>

                            <button type="submit" class="btn btn-md rounded font-sm hover-up">Update</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <h6>1. General info</h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Product title</label>
                                        <input type="text" name="title" placeholder="Type here"
                                            value="<%= product.title %>" class="form-control">
                                        <div class="error-message" id="title-error"></div>
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Description</label>
                                        <textarea placeholder="Type here" name="description" class="form-control"
                                            rows="4">"<%= product.description %>"</textarea>
                                        <div class="error-message" id="description-error"></div>
                                    </div>
                                    <!-- <div class="mb-4">
                                    <label class="form-label">Brand name</label>
                                    <input type="text" name="brand" placeholder="brand" value="<%= product.brand %>" class="form-control">
                                </div> -->
                                </div> <!-- col.// -->
                            </div> <!-- row.// -->
                            <hr class="mb-4 mt-0">
                            <div class="row">
                                <div class="col-md-3">
                                    <h6>2. Pricing</h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Cost</label>
                                        <input type="text" name="price" placeholder="â‚¹0000000.0"
                                            value="<%= product.price %>" class="form-control">
                                        <div class="error-message" id="price-error"></div>
                                    </div>
                                </div> <!-- col.// -->
                            </div> <!-- row.// -->
                            <!-- <div class="row">
                            <div class="col-md-3">
                                <h6>3. Flavour</h6>
                            </div>
                            <div class="col-md-9">
                                <div class="mb-4">
                                    <label class="form-label">Flavour</label>
                                    <% if(product.flavour && product.flavour.length >0) { %>
                                        <% for(let i=0;i<product.flavour.length;i++) { %>
                                    <input type="text" name="flavour" placeholder="flavour" value="<%= product.flavour[i] %>" class="form-control">
                                   
                                    <% } %>
                                    <% } %>
                                    <input type="text"  id="flavour" name="flavour" placeholder="flavour" class="form-control">
                                    <input type="text"  id="flavour" name="flavour[]" placeholder="flavour" class="form-control">
                                    <input type="text"  id="flavour" name="flavour[]" placeholder="flavour" class="form-control">
                                    <input type="text"  id="flavour" name="flavour[]" placeholder="flavour" class="form-control">
                                    
                                    <div class="error-message" id="flavour-error"></div>
                                </div>
                                <input type="hidden" name="id" value="<%= product._id %>">
                            </div> 
                        </div> row.// -->






                            <div class="row">
                                <div class="col-md-3">
                                    <h6>6. Flavours </h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Flavours</label>

                                        <!-- Allow the admin to add and remove multiple flavours -->
                                        <div id="flavours-container">
                                            <!-- Initial input field for flavours -->
                                            <% if(product.flavour && product.flavour.length> 0) { %>
                                                <% for(let i=0; i < product.flavour.length; i++) { %>
                                                    <div class="flavour-input">
                                                        <input type="text" name="flavours" placeholder="Flavour"
                                                            value="<%= product.flavour[i] %>" class="form-control">
                                                        <button type="button" class="remove-flavour-btn"
                                                            data-flavour-index="<%= i %>">Remove</button>
                                                    </div>
                                                    <% } %>
                                                        <% } %>
                                        </div>
                                        <button type="button" id="add-flavour-btn">Add Another Flavour</button>
                                        <div class="error-message" id="flavours-error"></div>
                                    </div>
                                </div>
                            </div>


                            <script>

                                document.getElementById('add-flavour-btn').addEventListener('click', function () {
                                    const flavoursContainer = document.getElementById('flavours-container');
                                    const newFlavourInput = document.createElement('div');
                                    newFlavourInput.className = 'flavour-input';
                                    const inputField = document.createElement('input');
                                    inputField.type = 'text';
                                    inputField.name = 'flavours';
                                    inputField.placeholder = 'Flavour';
                                    inputField.className = 'form-control';
                                    inputField.required = true;
                                    const removeButton = document.createElement('button');
                                    removeButton.type = 'button';
                                    removeButton.className = 'remove-flavour-btn';
                                    removeButton.textContent = 'Remove';
                                    removeButton.addEventListener('click', function () {
                                        flavoursContainer.removeChild(newFlavourInput);
                                    });

                                    newFlavourInput.appendChild(inputField);
                                    newFlavourInput.appendChild(removeButton);
                                    flavoursContainer.appendChild(newFlavourInput);
                                });

                                // Remove functionality for initial flavour input
                                // Remove existing weight
                                document.getElementById('flavours-container').addEventListener('click', function (event) {
                                    if (event.target.classList.contains('remove-flavour-btn')) {
                                        const flavourIndex = event.target.getAttribute('data-flavour-index');
                                        const productId = '<%=product._id %>'
                                        console.log("weight" + flavourIndex, productId);
                                        // const productId =product.id
                                        // Send an asynchronous request to delete the weight by index
                                        fetch(`/admin/deleteFlavour?id=${productId}&index=${flavourIndex}`, { // Replace with your actual delete endpoint and parameters
                                            method: 'POST',
                                        })
                                            .then(response => {
                                                if (response.ok) {
                                                    // If deletion from the database is successful, remove the input field from the interface
                                                    event.target.parentNode.remove(); // Remove the entire weight input container

                                                } else {
                                                    // Handle the case where deletion fails (optional)
                                                    console.error('Failed to delete the weight');
                                                }
                                            })
                                            .catch(error => {
                                                console.error('Error occurred while deleting the weight:', error);
                                            });
                                    }
                                });
                            </script>











                            <div class="row">
                                <div class="col-md-3">
                                    <h6>4. Quantity</h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input type="text" name="quantity" placeholder="Enter quantity"
                                            value="<%= product.quantity %>" class="form-control">
                                        <div class="error-message" id="quantity-error"></div>
                                    </div>
                                </div> <!-- col.// -->
                            </div> <!-- row.// -->



                            <div class="row">
                                <div class="col-md-3">
                                    <h6>5. Weight </h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Weight in (kg)</label>

                                        <!-- Allow the admin to add multiple weights -->
                                        <div id="weights-container">
                                            <% if(product.weight && product.weight.length> 0) { %>
                                                <% for(let i=0; i < product.weight.length; i++) { %>
                                                    <div class="weight-input">
                                                        <input type="number" name="weights" placeholder="0"
                                                            value="<%= product.weight[i] %>" class="form-control">
                                                        <button type="button" class="remove-weight-btn"
                                                            data-weight-index="<%= i %>">Remove</button>
                                                    </div>
                                                    <% } %>
                                                        <% } %>
                                        </div>

                                        <button type="button" id="add-weight-btn">Add Another Weight</button>
                                        <div class="error-message" id="weights-error"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Other product details inputs -->

                            <script>
                                // JavaScript logic to add and remove multiple weight input fields
                                document.getElementById('add-weight-btn').addEventListener('click', function () {
                                    const weightsContainer = document.getElementById('weights-container');
                                    const newWeightInput = document.createElement('div');
                                    newWeightInput.className = 'weight-input';
                                    const inputField = document.createElement('input');
                                    inputField.type = 'number';
                                    inputField.name = 'weights';
                                    inputField.placeholder = '0';
                                    inputField.className = 'form-control';
                                    inputField.required = true;
                                    const removeButton = document.createElement('button');
                                    removeButton.type = 'button';
                                    removeButton.className = 'remove-weight-btn';
                                    removeButton.textContent = 'Remove';
                                    removeButton.addEventListener('click', function () {
                                        weightsContainer.removeChild(newWeightInput);
                                    });

                                    newWeightInput.appendChild(inputField);
                                    newWeightInput.appendChild(removeButton);
                                    weightsContainer.appendChild(newWeightInput);
                                });

                                // Remove existing weight
                                document.getElementById('weights-container').addEventListener('click', function (event) {
                                    if (event.target.classList.contains('remove-weight-btn')) {
                                        const weightIndex = event.target.getAttribute('data-weight-index');
                                        const productId = '<%=product._id %>'
                                        console.log("weight" + weightIndex, productId);
                                        // const productId =product.id
                                        // Send an asynchronous request to delete the weight by index
                                        fetch(`/admin/deleteWeight?id=${productId}&index=${weightIndex}`, { // Replace with your actual delete endpoint and parameters
                                            method: 'POST',
                                        })
                                            .then(response => {
                                                if (response.ok) {
                                                    // If deletion from the database is successful, remove the input field from the interface
                                                    event.target.parentNode.remove(); // Remove the entire weight input container

                                                } else {
                                                    // Handle the case where deletion fails (optional)
                                                    console.error('Failed to delete the weight');
                                                }
                                            })
                                            .catch(error => {
                                                console.error('Error occurred while deleting the weight:', error);
                                            });
                                    }
                                });
                            </script>



                            <hr class="mb-4 mt-0">
                            <div class="row">

                                <div class="col-md-3">
                                    <h6>5. Brand</h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <select name="brand" class="form-select">
                                            <% brand.forEach(brand=> { %>
                                                <% if (brand.status===true) { %>
                                                    <option value="<%= brand._id %>" <% if
                                                        (currentProductBrand._id.toString()===brand._id.toString()) { %>
                                                        selected <% } %> >
                                                            <%= brand.name%>
                                                    </option>
                                                    <% } %>
                                                        <% }); %>
                                        </select>
                                    </div>

                                </div>

                                <!--.......................................................................................-->
                                <div class="col-md-3">
                                    <h6>6. Category</h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <select name="category" class="form-select">
                                            <% categories.forEach(categories=> { %>
                                                <% if (categories.status===true) { %>
                                                    <option value="<%= categories._id %>" <% if
                                                        (currentProductCategory._id.toString()===categories._id.
                                                        toString()) { %> selected <% } %> >
                                                            <%= categories.name%>
                                                    </option>
                                                    <% } %>
                                                        <% }); %>
                                        </select>
                                    </div>

                                </div>


                            </div> <!-- row.// -->
                            <hr class="mb-4 mt-0">
                            <div class="row">
                                <div class="col-md-3">
                                    <h6>7.Images</h6>
                                </div>
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label for="images" class="form-label">Images</label>

                                        <input id="images" class="form-control" type="file" accept="image/*"
                                            name="images" multiple>
                                        <div class="error-message" id="image-error"></div>

                                    </div>
                                </div> <!-- col.// -->
                            </div>
                            <div class="uploaded-images">
                                <% if (product.images && product.images.length> 0) { %>
                                    <% product.images.forEach((images,index)=> { %>
                                        <div class="image-container">
                                            <div class="image-wrapper">
                                                <img src="/admin/assets/imgs/category/<%= images %>"
                                                    alt="Uploaded Image">
                                                <form method="POST" action="/admin/deleteImage">
                                                    <input type="hidden" name="imageIndex" value="<%= index %>">
                                                    <input type="hidden" name="productId" value="<%= product._id %>">
                                                    <button type="submit" class="delete-btn " id="delete">
                                                        <span class="trash-icon">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16"
                                                                height="16" fill="currentColor" class="bi bi-trash"
                                                                viewBox="0 0 16 16">
                                                                <path
                                                                    d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                                                <path
                                                                    d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                                            </svg>
                                                        </span>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                        <% }); %>
                                            <% } %>
                            </div>
                        </div>
                        <!-- .row end// -->
                        <style>
                            .image-container {
                                display: inline-block;
                                margin-right: 10px;
                                margin-bottom: 10px;
                                position: relative;
                            }

                            .image-container img {
                                width: 100px;
                                height: auto;
                            }


                            /* Hide delete button by default */
                            .delete-btn {
                                display: none;

                            }

                            .trash-icon {
                                display: none;
                                position: absolute;
                                top: 5px;
                                right: 5px;
                                background-color: rgba(255, 255, 255, 0.5);
                                padding: 2px;
                                border-radius: 50%;
                            }

                            /* Show delete button when hovering over the image container */
                            .image-container:hover .delete-btn {
                                display: contents;
                                background-color: rgb(255, 255, 255);
                                border: none;

                            }

                            .image-container:hover .trash-icon {
                                display: inline-block;

                            }

                            /* Style the image container and adjust layout */
                            .image-container {
                                display: inline-block;
                                margin: 10px;
                            }

                            .image-wrapper {
                                position: relative;
                                display: inline-block;
                            }

                            /* Style the delete button */
                            .delete-btn {

                                /* position: absolute;
    width: fit-content; */
                                top: 5px;
                                right: 2px;
                                background: none;
                                color: white;
                                border: none;
                                /* padding: 5px 10px; */
                                cursor: pointer;


                            }

                            .trash-icon svg {
                                width: 16px;
                                height: 16px;
                                color: red;
                                /* Customize the color of the trash icon */
                            }
                        </style>
                    </div>
                </div>
            </div>
            </div>
        </form>
    </section> <!-- content-main end// -->
    <script>

        function validateForm() {


            clearErrorMessages();

            // const title = document.getElementsByName('title')[0].value;

            // const description = document.getElementsByName('productdesc')[0].value;
            // const brand = document.getElementsByName('brand')[0].value;
            // const price = document.getElementsByName('price')[0].value;
            // console.log('this is price'+price);
            // const flavour = document.getElementsByName('flavour')[0].value;
            // const quantity = document.getElementsByName('quantity')[0].value;
            // const weight = document.getElementsByName('weight')[0].value;
            // const images = document.getElementById('images')[0].files;

            // console.log('this image portionnnnnnnnnnnnnnnnnnnnnnn from edited product:'+ images);
            const title = document.getElementsByName('title')[0].value;
            // console.log("product tiltle" + title)
            const description = document.querySelector('textarea[name="description"]').value;
            // const description = document.getElementsByName('description')[0].value;
            // console.log("product description" + description)
            const price = document.getElementsByName('price')[0].value;
            // console.log("product price" + price)
            const flavour = document.getElementsByName('flavours');
            // console.log("flavour leeeeeeength" + flavour.length);
            // console.log("product flavour" + flavour[1].value)
            const quantity = document.getElementsByName('quantity')[0].value;
            // console.log("product quantity" + quantity)
            const weight = document.getElementsByName('weights');
            // console.log("product weight" + weight[1].value)
            const category = document.getElementsByName('category')[0].value;
            // console.log("category" + category)
            const brand = document.getElementsByName('brand')[0].value;
            // console.log("product brand" + brand)
            // const images = document.getElementsByName('images').files;
            const images = document.getElementById('images').files;

            if (images) {
                console.log(images)
            }





            let isValid = true;

            if (title.trim() === '') {
                displayErrorMessage('title-error', 'Please enter a product title.');
                isValid = false;
            }
            if (description.trim() === '') {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            if (price.trim() === '' || isNaN(price) || parseFloat(price) < 0) {
                displayErrorMessage('price-error', 'Please enter a valid product price.');
                isValid = false;
            }


            if (flavour.length === 0) {
                displayErrorMessage('flavours-error', 'Please enter a flavour ');
                isValid = false;
            }
            // else{
            // for(let i=0;i<flavour.length;i++){   
            //     if(flavour[i].value.trim() === ''){
            //         displayErrorMessage('flavour-error', 'Please enter a flavour or fill from the first place holder');
            //               isValid = false;
            //     }
            // }
            // }

            if (quantity.trim() === '' || isNaN(quantity) || parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid product quantity.');
                isValid = false;
            }
            // for (let i = 0; i < weight.length; i++) {
            //             const weightValue = weight[i].value;
            if (weight.length === 0 ) {
                displayErrorMessage('weights-error', 'Please specify a weight.');
                isValid = false;
            }


            // if (images.length === 0) {
            //     displayErrorMessage('image-error', 'Please select at least one image.');
            //     isValid = false;
            // }


            return isValid;
        }

        function displayErrorMessage(errorId, message) {
            const errorDiv = document.getElementById(errorId);
            errorDiv.innerText = message;
        }

        // function displayErrorMessage(fieldName, message) {
        // const field = document.getElementsByName(fieldName)[0];
        // const errorDiv = document.createElement('div');
        // errorDiv.className = 'error-message';
        // errorDiv.innerText = message;
        // field.insertAdjacentElement('afterend', errorDiv); // This places the error message right after the field.
        // }

        // function clearErrorMessages() {
        // const errorMessages = document.querySelectorAll('.error-message');
        // errorMessages.forEach((errorMessage) => {
        //     errorMessage.remove();
        // });
        // }
        function clearErrorMessages() {
            const errorMessages = document.querySelectorAll('.error-message');
            errorMessages.forEach((errorMessage) => {
                errorMessage.innerText = '';
            });
        }



    </script>
    <%- include('../adminLayout/footer.ejs',{adminSession}) %>